export const blogsList = [{
  id: 1,
  cover: '/image/demo1.png',
  title: 'JS事件循环之异步任务',
  tags: ['Vue', 'Sass'],
  author: 'GodLanBo',
  releaseTime: 1597407302225,
  content: `JS事件循环之异步任务什么是异步任务
首先我们知道，js是单线程语言，事件循环是js的事件执行机制。因为js是单线程的所以就导致，如果一个任务执行时间太长，会导致后面的任务无法执行，进而卡住执行栈。所以在js中将任务分为两类：

* 同步任务
* 异步任务

同步任务直接添加到执行栈中，异步任务则在自己需要的准备工作完成后添加在执行栈中，这样就不会因为异步任务所需要的准备时间过长而导致执行阻塞。`
},{
  id: 2,
  cover: '/image/demo3.png',
  title: 'JS事件循环之异步任务',
  tags: ['Vue', 'Sass'],
  author: 'GodLanBo',
  releaseTime: 1597407302225,
  content: `# JS事件循环之异步任务

### 什么是异步任务

首先我们知道，js是单线程语言，事件循环是js的事件执行机制。因为js是单线程的所以就导致，如果一个任务执行时间太长，会导致后面的任务无法执行，进而卡住执行栈。所以在js中将任务分为两类：

* 同步任务
* 异步任务

同步任务直接添加到执行栈中，异步任务则在自己需要的准备工作完成后添加在执行栈中，这样就不会因为异步任务所需要的准备时间过长而导致执行阻塞。`
},{
  id: 3,
  cover: '/image/avatar.jpeg',
  title: 'JS事件循环之异步任务',
  tags: ['Vue', 'Sass'],
  author: 'GodLanBo',
  releaseTime: 1597407302225,
  content: `# JS事件循环之异步任务

### 什么是异步任务

首先我们知道，js是单线程语言，事件循环是js的事件执行机制。因为js是单线程的所以就导致，如果一个任务执行时间太长，会导致后面的任务无法执行，进而卡住执行栈。所以在js中将任务分为两类：

* 同步任务
* 异步任务

同步任务直接添加到执行栈中，异步任务则在自己需要的准备工作完成后添加在执行栈中，这样就不会因为异步任务所需要的准备时间过长而导致执行阻塞。`
}, {
  id: 4,
  cover: '/image/demo2.jpg',
  title: 'JS事件循环之异步任务',
  tags: ['Vue', 'Sass'],
  author: 'GodLanBo',
  releaseTime: 1597407302225,
  content: `# JS事件循环之异步任务

### 什么是异步任务

首先我们知道，js是单线程语言，事件循环是js的事件执行机制。因为js是单线程的所以就导致，如果一个任务执行时间太长，会导致后面的任务无法执行，进而卡住执行栈。所以在js中将任务分为两类：

* 同步任务
* 异步任务

同步任务直接添加到执行栈中，异步任务则在自己需要的准备工作完成后添加在执行栈中，这样就不会因为异步任务所需要的准备时间过长而导致执行阻塞。`
}, {
  id: 5,
  cover: '/image/demo4.png',
  title: 'JS事件循环之异步任务',
  tags: ['Vue', 'Sass'],
  author: 'GodLanBo',
  releaseTime: 1597407302225,
  content: `# JS事件循环之异步任务

### 什么是异步任务

首先我们知道，js是单线程语言，事件循环是js的事件执行机制。因为js是单线程的所以就导致，如果一个任务执行时间太长，会导致后面的任务无法执行，进而卡住执行栈。所以在js中将任务分为两类：

* 同步任务
* 异步任务

同步任务直接添加到执行栈中，异步任务则在自己需要的准备工作完成后添加在执行栈中，这样就不会因为异步任务所需要的准备时间过长而导致执行阻塞。`
}]

export const lifeList = [{
  id: 1,
  cover: '/image/demo3.png',
  title: '泰拉瑞亚全图鉴全成就达成',
  time: 1597407302225
}, {
  id: 2,
  cover: '/image/demo2.jpg',
  title: '泰拉瑞亚全图鉴全成就达成',
  time: 1597407302225
}, {
  id: 3,
  cover: '/image/demo3.png',
  title: '泰拉瑞亚全图鉴全成就达成',
  time: 1597407302225
}, {
  id: 4,
  cover: '/image/demo3.png',
  title: '泰拉瑞亚全图鉴全成就达成',
  time: 1597407302225
}]